```mermaid
sequenceDiagram
participant F as Front
participant IdP as Nuvemshop IdP
participant API as Nuvemshop API
participant AppBe as App's Backend
participant PPApi as Payment Provider API
F ->>+ IdP: GET apps/{appId}/authorize(credentials)
Note over IdP: Merchant will be<br/>prompted to log in if<br/>necessary.
IdP ->> IdP: validate(credentials)
IdP -->>- F: 301: {redirect_uri}(code, success_url, failure_url, cancel_url)
F ->>+ AppBe: POST {redirect_uri}(code, success_url, failure_url, cancel_url)
AppBe ->>+ IdP: POST /apps/authorize/token(code, client_id, client_secret, grant_type)
IdP -->>- AppBe: 200: (access_token, token_type, scope, user_id)
Note over AppBe: For future usage:
AppBe ->> AppBe: persist(access_token, user_id)
AppBe -->>- F: 301: Redirect to App Installation Flow
F ->>+ PPApi: installApp(NuvemshopApp, scopes)
PPApi -->>- F: appInstallationUI(ppCode)
F -->>+ AppBe: authorize(ppCode)
AppBe -->>+ PPApi: authorize(ppCode, ppCredentials)
PPApi -->>- AppBe: 200: (ppAccessToken, [etc])
AppBe ->> AppBe: persist(access_token, user_id, ppAccessToken)
Note over AppBe: Payment Provider<br>creation:
AppBe ->>+ API: POST {store_id}/payment_providers(access_token, params)
API ->>- AppBe: 201: Created (Payment Provider)
AppBe -->>- F: 301: {success_url}
```